CREATE TABLE Skus (
    id TEXT NOT NULL PRIMARY KEY,
    sessionId TEXT NOT NULL REFERENCES Session(id) ON DELETE CASCADE,
    skuId INTEGER NOT NULL UNIQUE,
    skuName TEXT NOT NULL,
    skuPrice TEXT NOT NULL,
    skuDescription TEXT NOT NULL,
    skuCategory TEXT NOT NULL,
    skuImage TEXT NOT NULL,
    skuRatingRate TEXT NOT NULL,
    skuRatingCount INTEGER NOT NULL
);

CREATE VIEW SkuDisplay AS
SELECT
    Skus.id AS id,
    Skus.sessionId AS sessionId,
    Skus.skuId AS skuId,
    Skus.skuName AS skuName,
    Skus.skuPrice AS skuPrice,
    Skus.skuDescription AS skuDescription,
    Skus.skuCategory AS skuCategory,
    Skus.skuImage AS skuImage,
    Skus.skuRatingRate AS skuRatingRate,
    Skus.skuRatingCount AS skuRatingCount,
    CASE WHEN Wishlist.skuId IS NOT NULL THEN 1 ELSE 0 END AS isWishlisted,
    IFNULL(Cart.quantity, 0) AS quantityInCart
FROM Skus
LEFT JOIN Wishlist ON Skus.skuId = Wishlist.skuId AND Skus.sessionId = Wishlist.sessionId
LEFT JOIN Cart ON Skus.skuId = Cart.skuId AND Skus.sessionId = Cart.sessionId;


-- Queries
insertSku:
INSERT INTO Skus(
    id, sessionId, skuId, skuName, skuPrice, skuDescription, skuCategory, skuImage, skuRatingRate, skuRatingCount
) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

selectAllSkus:
SELECT * FROM Skus;

selectSkusBySession:
SELECT * FROM Skus
WHERE sessionId = ?;

selectSkuById:
SELECT * FROM Skus
WHERE id = ?;

selectAllSkuCategory:
SELECT * FROM Skus
WHERE skuCategory = ?;

updateSku:
UPDATE Skus SET
    sessionId = ?,
    skuId = ?,
    skuName = ?,
    skuPrice = ?,
    skuDescription = ?,
    skuCategory = ?,
    skuImage = ?,
    skuRatingRate = ?,
    skuRatingCount = ?
WHERE id = ?;

deleteSkuById:
DELETE FROM Skus
WHERE id = ?;

countSkusBySession:
SELECT COUNT(*) FROM Skus
WHERE sessionId = ?;

countSkusByCategory:
SELECT COUNT(*) FROM Skus
WHERE skuCategory = ?;

existsSku:
SELECT EXISTS(
    SELECT 1 FROM Skus WHERE id = ?
);

deleteAllSkus:
DELETE FROM Skus;

getAllDisplayProducts:
SELECT * FROM SkuDisplay
WHERE sessionId = :sessionId;